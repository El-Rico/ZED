TARGET	:= libZED$(ZEDTARGET).a

COMMONDIR ?= ../../..

TARGETDIR = $(COMMONDIR)/Lib/$(PLATFORM)
OBJDIR = $(COMMONDIR)/Obj/$(PLATFORM)/$(ZEDTARGET)/$(BUILD)
SOURCEDIR = Source
HEADERDIR = Headers

# Get the machine type for cross compilation
TOOL_PREFIX		= pandora-

COMMONINCDIR = ../../Common/Headers

BUILD_PLATFORM	= PANDORA_LINUX
PLATFORM		= Pandora_Linux

CPP = $(TOOL_PREFIX)g++
AR	= $(TOOL_PREFIX)ar

# Set the library path
ifeq ($(strip $(GCCDIR)),)
SYSL = /usr/local/angstrom/arm/lib
else
SYSL = /usr/lib
endif

CPPFLAGS =		-c -DSUPPORT_X11 
CPPFLAGS_EXT =	-ffriend-injection -std=c++0x -mcpu=cortex-a8 \
				-Wa,-mcpu=cortex-a8 -mfpu=neon -Wa,-mfpu=neon \
				-mfloat-abi=softfp
SYSIPATH =		-idirafter $(PNDSDK)/usr/include

##### Debug Target #####
debug: BUILD = Debug
debug: ZED_BUILD = DEBUG
debug: TARGET := libZED$(ZEDTARGET)D.a
debug: CPPFLAGS += -c -g -ggdb -Wall -D_DEBUG $(CPPFLAGS_EXT)
debug: $(TARGET)

##### Release Target #####
release: BUILD = Release
release: ZED_BUILD = RELEASE
release: TARGET := libZED$(ZEDTARGET).a
release: CPPFLAGS += -c -O3 $(CPPFLAGS_EXT)
release: $(TARGET)

##### Profile Target #####
profile: BUILD = Profile
profile: ZED_BUILD = PROFILE
profile: TARGET := libZED$(ZEDTARGET)P.a
profile: CPPFLAGS += -c -g -Wall -O3 -D_DEBUG $(CPPFLAGS_EXT)
profile: $(TARGET)

##### Build the object files while not in the object directory
ifneq ($(OBJDIR), $(CURDIR))

$(TARGETDIR):
	-mkdir -p $(TARGETDIR)

CPPFILES	:= $(foreach dir,$(SOURCEDIR),$(notdir $(wildcard $(dir)/*.cpp)))

OBJS = $(CPPFILES:.cpp=.o)

$(TARGET): $(OBJS) $(TARGETDIR)
	cd $(OBJDIR) && $(AR) rcsv ../$(TARGETDIR)/$(TARGET) $(OBJS)

%.o: $(SOURCEDIR)/%.cpp
	-mkdir -p $(OBJDIR)
	$(CPP) $(CPPFLAGS) -DZED_BUILD_$(ZED_BUILD) -DZED_PLATFORM_$(BUILD_PLATFORM) \
	-I$(COMMONINCDIR) $(ZEDINCDIR) $< -o $(OBJDIR)/$@

.PHONY: copy

copy:
	-mkdir -p $(ZEDPATH)/include/$(PLATFORM)
	-mkdir -p $(ZEDPATH)/lib/$(PLATFORM)
	if test -d ./Headers; then cp -f ./Headers/*.hpp $(ZEDPATH)/include/$(PLATFORM)/; fi
	cp -f $(COMMONINCDIR)/*.hpp $(ZEDPATH)/include/$(PLATFORM)/
	cp -f $(TARGETDIR)/*.a $(ZEDPATH)/lib/$(PLATFORM)/

.PHONY: clean
clean:
	-rm -rf $(COMMONDIR)/Obj
	-rm -rf $(COMMONDIR)/Lib

endif
